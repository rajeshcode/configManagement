---

- name: "** ares ** create directory for hdp hadoop config"
  action: file path={{ item.name }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }} state=directory
  with_items:
    - { name: '/etc/hdp', owner: 'root', group: 'hadoop', mode: '0755' }
    - { name: '{{ hdp2_conf_dir }}', owner: 'root', group: 'hadoop', mode: '0755' }
    - { name: '{{ hdp2_conf_dir }}/hadoop', owner: 'root', group: 'hadoop', mode: '0755' }
    - { name: '{{ hdp2_conf_dir }}/hadoop/conf', owner: 'root', group: 'hadoop', mode: '0755' }
    - { name: '{{ hdp2_conf_dir }}/pig', owner: 'hadoop', group: 'hadoop', mode: '0755' }
    - { name: '{{ hdp2_conf_dir }}/pig/conf', owner: 'hadoop', group: 'hadoop', mode: '0755' }
    - { name: '{{ hdp2_conf_dir }}/hive', owner: 'hadoop', group: 'hadoop', mode: '0755' }
    - { name: '{{ hdp2_conf_dir }}/hive/conf', owner: 'hadoop', group: 'hadoop', mode: '0755' }
  tags: deploy-hdp2-conf

- name: "** ares ** ensure hadoop log directories are present on slavenodes"
  action: file path={{ item.name }} owner=hadoop group=hadoop mode={{ item.mode }} state=directory
  with_items:
    - { name: '/var/log/hadoop', mode: '0755' }
    - { name: '/var/log/hadoop/hadoop', mode: '0755' }
    - { name: '/var/log/hadoop/hive', mode: '0775' }
    - { name: '/var/log/hadoop/pig', mode: '0775' }
  when: "'slavenodes' in group_names"
  tags: deploy-hdp2-conf 

- name: "** ares ** ensure hadoop log directories are present on masternodes"
  action: file path={{ item.name }} owner=hadoop group=hadoop mode={{ item.mode }} state=directory
  with_items:
    - { name: '/hadoop/logs', mode: '0755' }
    - { name: '/hadoop/logs/hadoop', mode: '0755' }
    - { name: '/hadoop/logs/hive', mode: '0775' }
    - { name: '/hadoop/logs/pig', mode: '0775' }
  when: "'masternodes' in group_names"
  tags: deploy-hdp2-conf 

#- name: "** ares ** install hdp2 configs"
#  action: synchronize src=/var/lib/ansible/hadoop-ansible/playbooks/files/hdp2/ares/{{ item.src }} dest={{ hdp2_conf_dir }}/{{ item.dest }}
#  with_items:
#    - { src: 'hadoop/conf/', dest: 'hadoop/conf/' }
#    - { src: 'hive/conf/', dest: 'hive/conf/' }
#    - { src: 'pig/conf/', dest: 'pig/conf/' }
#  tags: deploy-hdp2-conf


- name: "** ares ** deploy hdp2 hadoop conf" 
  action: copy src=/var/lib/ansible/hadoop-ansible/roles/ares/files/hadoop-config/hadoop/conf/{{ item.src }} dest={{ hdp2_conf_dir }}/hadoop/conf/{{ item.dest }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }}
  with_items:
    - { src: 'container-executor.cfg', dest: 'container-executor.cfg', owner: 'root', group: 'hadoop', mode: '0400' }
    - { src: 'capacity-scheduler.xml', dest: 'capacity-scheduler.xml', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'hadoop-env.sh', dest: 'hadoop-env.sh', owner: 'hadoop', group: 'hadoop', mode: '0755' }
    - { src: 'hadoop-metrics2.properties', dest: 'hadoop-metrics2.properties', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'hadoop-metrics.properties', dest: 'hadoop-metrics.properties', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'core-site.xml', dest: 'core-site.xml', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'hdfs-site.xml', dest: 'hdfs-site.xml', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'mapred-site.xml', dest: 'mapred-site.xml', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'mapred-queues.xml', dest: 'mapred-queues.xml', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'yarn-site.xml', dest: 'yarn-site.xml', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'httpfs-env.sh', dest: 'httpfs-env.sh', owner: 'hadoop', group: 'hadoop', mode: '0755' }
    - { src: 'yarn-env.sh', dest: 'yarn-env.sh', owner: 'hadoop', group: 'hadoop', mode: '0755' }
    - { src: 'mapred-env.sh', dest: 'mapred-env.sh', owner: 'hadoop', group: 'hadoop', mode: '0755' }
    - { src: 'log4j.properties', dest: 'log4j.properties', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'health_check.sh', dest: 'health_check.sh', owner: 'hadoop', group: 'hadoop', mode: '0755' }
    - { src: 'masters', dest: 'masters', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'hosts', dest: 'hosts', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'topology', dest: 'topology', owner: 'hadoop', group: 'hadoop', mode: '0755' }
    - { src: 'jmxremote.password', dest: 'jmxremote.password', owner: 'hadoop', group: 'hadoop', mode: '0600' }
    - { src: 'hdfs-exclude', dest: 'hdfs-exclude', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'mapred-exclude', dest: 'mapred-exclude', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'ssl-server.xml', dest: 'ssl-server.xml', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'ssl-client.xml', dest: 'ssl-client.xml', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'configuration.xsl', dest: 'configuration.xsl', owner: 'hadoop', group: 'hadoop', mode: '0644' }
  tags: deploy-hdp2-conf


- name: "** ares ** deploy hdp2 hive conf" 
  action: copy src=/var/lib/ansible/hadoop-ansible/roles/ares/files/hadoop-config/hive/conf/{{ item.src }} dest={{ hdp2_conf_dir }}/hive/conf/{{ item.dest }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }}
  with_items:
    - { src: 'hive-exec-log4j.properties', dest: 'hive-exec-log4j.properties', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'hive-log4j.properties', dest: 'hive-log4j.properties', owner: 'hadoop', group: 'hadoop', mode: '0644' }
    - { src: 'hive-site.xml', dest: 'hive-site.xml', owner: 'hadoop', group: 'hadoop', mode: '0644' }
  tags: deploy-hdp2-conf

- name: "** ares ** deploy hdp2 pig conf" 
  action: copy src=/var/lib/ansible/hadoop-ansible/roles/ares/files/hadoop-config/pig/conf/{{ item.src }} dest={{ hdp2_conf_dir }}/pig/conf/{{ item.dest }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }}
  with_items:
    - { src: 'pig.properties', dest: 'pig.properties', owner: 'hadoop', group: 'hadoop', mode: '0644' }
  tags: deploy-hdp2-conf


- name: "** ares ** set root ownership to hadoop config dirs and files"
  action: file path={{ item.name }} owner={{ item.owner }} group={{ item.group }} mode={{ item.mode }} state={{ item.state }}
  with_items:
    - { name: '{{ hdp2_conf_dir }}', owner: 'root', group: 'hadoop', mode: '0755', state: 'directory' }
    - { name: '{{ hdp2_conf_dir }}/hadoop', owner: 'root', group: 'hadoop', mode: '0755', state: 'directory' }
    - { name: '{{ hdp2_conf_dir }}/hadoop/conf', owner: 'root', group: 'hadoop', mode: '0755', state: 'directory' }
  tags: deploy-hdp2-conf 


#######

# - name: "** ares ** set file HADOOP_SECURE_DN_USER on datanodes"
#  action: copy src={{ item }} dest=/var/lib/service/datanode/env/HADOOP_SECURE_DN_USER owner=root group=root mode=0644
#  with_items:
#    - /var/lib/ansible/hadoop-ansible/roles/ares/files/HADOOP_SECURE_DN_USER
#  when: "'slavenodes' in group_names"
#  tags: set-hdp2-config

